/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ChristmasEvent } from "./components/data-store/fetch";
import { ListenInput } from "./components/data-store/data-store";
export namespace Components {
    interface ChristmasEvent {
        "ev": ChristmasEvent;
    }
    interface ChristmasLetter {
    }
    interface DataStore {
        "listen": (func: ListenInput) => Promise<unknown>;
    }
    interface EventDialog {
        "event": string;
    }
    interface MemoryWrapper {
    }
}
declare global {
    interface HTMLChristmasEventElement extends Components.ChristmasEvent, HTMLStencilElement {
    }
    var HTMLChristmasEventElement: {
        prototype: HTMLChristmasEventElement;
        new (): HTMLChristmasEventElement;
    };
    interface HTMLChristmasLetterElement extends Components.ChristmasLetter, HTMLStencilElement {
    }
    var HTMLChristmasLetterElement: {
        prototype: HTMLChristmasLetterElement;
        new (): HTMLChristmasLetterElement;
    };
    interface HTMLDataStoreElement extends Components.DataStore, HTMLStencilElement {
    }
    var HTMLDataStoreElement: {
        prototype: HTMLDataStoreElement;
        new (): HTMLDataStoreElement;
    };
    interface HTMLEventDialogElement extends Components.EventDialog, HTMLStencilElement {
    }
    var HTMLEventDialogElement: {
        prototype: HTMLEventDialogElement;
        new (): HTMLEventDialogElement;
    };
    interface HTMLMemoryWrapperElement extends Components.MemoryWrapper, HTMLStencilElement {
    }
    var HTMLMemoryWrapperElement: {
        prototype: HTMLMemoryWrapperElement;
        new (): HTMLMemoryWrapperElement;
    };
    interface HTMLElementTagNameMap {
        "christmas-event": HTMLChristmasEventElement;
        "christmas-letter": HTMLChristmasLetterElement;
        "data-store": HTMLDataStoreElement;
        "event-dialog": HTMLEventDialogElement;
        "memory-wrapper": HTMLMemoryWrapperElement;
    }
}
declare namespace LocalJSX {
    interface ChristmasEvent {
        "ev"?: ChristmasEvent;
    }
    interface ChristmasLetter {
    }
    interface DataStore {
    }
    interface EventDialog {
        "event"?: string;
    }
    interface MemoryWrapper {
    }
    interface IntrinsicElements {
        "christmas-event": ChristmasEvent;
        "christmas-letter": ChristmasLetter;
        "data-store": DataStore;
        "event-dialog": EventDialog;
        "memory-wrapper": MemoryWrapper;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "christmas-event": LocalJSX.ChristmasEvent & JSXBase.HTMLAttributes<HTMLChristmasEventElement>;
            "christmas-letter": LocalJSX.ChristmasLetter & JSXBase.HTMLAttributes<HTMLChristmasLetterElement>;
            "data-store": LocalJSX.DataStore & JSXBase.HTMLAttributes<HTMLDataStoreElement>;
            "event-dialog": LocalJSX.EventDialog & JSXBase.HTMLAttributes<HTMLEventDialogElement>;
            "memory-wrapper": LocalJSX.MemoryWrapper & JSXBase.HTMLAttributes<HTMLMemoryWrapperElement>;
        }
    }
}
